
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Abhi
 */
public class CustomerView extends javax.swing.JFrame {

    /**
     * Creates new form customerView
     */
    public CustomerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        registrationNoSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        billOverviewTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        quotationTable = new javax.swing.JTable();
        searchButton = new javax.swing.JButton();
        foundLabel = new javax.swing.JLabel();
        closeWindowButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Bill OVERVIEW");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Vehicle Registration Number: ");

        registrationNoSearch.setToolTipText("");
        registrationNoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationNoSearchActionPerformed(evt);
            }
        });

        billOverviewTable.setBorder(new javax.swing.border.MatteBorder(null));
        billOverviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Bike Name", "Repair Category", "Bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        billOverviewTable.setColumnSelectionAllowed(true);
        billOverviewTable.setEnabled(false);
        jScrollPane1.setViewportView(billOverviewTable);

        quotationTable.setBorder(new javax.swing.border.MatteBorder(null));
        quotationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Registration No", "Cost", "Cost for"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        quotationTable.setColumnSelectionAllowed(true);
        quotationTable.setEnabled(false);
        jScrollPane2.setViewportView(quotationTable);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        foundLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        foundLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        foundLabel.setText("---");

        closeWindowButton.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        closeWindowButton.setText("Close Window");
        closeWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeWindowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foundLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registrationNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(closeWindowButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(registrationNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(foundLabel)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(closeWindowButton)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 Connect bill = new Connect();
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        String rNo = registrationNoSearch.getText();
        DefaultTableModel quotationTab = (DefaultTableModel) quotationTable.getModel();
        DefaultTableModel billOverviewTab = (DefaultTableModel) billOverviewTable.getModel();
        quotationTab.setNumRows(1);
        billOverviewTab.setNumRows(1);
        int found = 0, i = 0, j = 0, sum = 0, costs[] = null, z;

//Adding data to billOverviewTable
        Object[][] billOverview = new Object[50][5];
        try {
            billOverview = bill.bikeBill();
            
            try {
                while (found != 1) {
                    
                    if (billOverview[i][3].toString().equalsIgnoreCase(rNo)) {
                        found = 1;
                        
                        for (j = 0; j < 3; j++) {
                            billOverviewTab.setValueAt(billOverview[i][j], 0, j);
                        }
                        foundLabel.setText("Vehicle FOUND");
                    }
                    i++;
                }
            } catch (Exception e) {
                billOverviewTab.setNumRows(0);
            }

//Calculating Sum of cost in bill_quotation for searched Vehicle
            if (found == 1) {
                for (i = 0; i < bill.quotationTableRowCount; i++) {
                    if (billOverview[i][3].toString().equalsIgnoreCase(rNo)) {
                        sum += Integer.parseInt(billOverview[i][2].toString());
                    }
                }
                billOverviewTab.setValueAt(sum, 0, 2);
            } else {
                foundLabel.setText("No record found");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
        }

//Adding data to billQuotationTable
        found = 0;
        z = 0;
        try {
            
            Object[][] row = bill.billQuotation();
            
            for (i = 0; i < bill.quotationTable2RowCount; i++) {
                if ((row[i][0]).toString().equalsIgnoreCase(rNo)) {
                    found = 1;
                    
                    quotationTab.setNumRows(i + 1);
                    quotationTab.setValueAt(row[i][0], z, 0);
                    quotationTab.setValueAt(row[i][1], z, 1);
                    quotationTab.setValueAt(row[i][2], z, 2);
                    z++;
                    
                }
            }
            quotationTab.setNumRows(z);
        } catch (SQLException ex) {
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (found != 1) {
            quotationTab.setNumRows(0);
        }
        

    }//GEN-LAST:event_searchButtonActionPerformed

    private void registrationNoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationNoSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registrationNoSearchActionPerformed

    private void closeWindowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeWindowButtonActionPerformed
        // TODO add your handling code here
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeWindowButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable billOverviewTable;
    private javax.swing.JButton closeWindowButton;
    private javax.swing.JLabel foundLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable quotationTable;
    private javax.swing.JTextField registrationNoSearch;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
